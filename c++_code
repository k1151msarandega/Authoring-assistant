#include <iostream>
#include <string>
#include <algorithm>
using namespace std;

// function prototypes
void PrintMenu();
char GetChoice();
int GetNumOfNonWSCharacters(const string&);
int GetNumOfWords(const string&);
int FindText(const string&, const string&);
void ReplaceExclamation(string&);
void ShortenSpace(string&);
void ExecuteMenu(char, string&);

int main() {
    string inputText;
    char choice;
    
    // prompt for input string and output it
    cout << "Enter a sample text:" << endl;
    cout << endl;
    getline(cin, inputText);
    cout << "You entered: " << inputText << endl;
    
    // print menu and execute choices until 'q' is entered
    do {
        PrintMenu();
        choice = GetChoice();
        ExecuteMenu(choice, inputText);
    } while (choice != 'q');

    return 0;
}

void PrintMenu() {
    cout << "\nMENU" << endl;
    cout << "c - Number of non-whitespace characters" << endl;
    cout << "w - Number of words" << endl;
    cout << "f - Find text" << endl;
    cout << "r - Replace all !'s" << endl;
    cout << "s - Shorten spaces" << endl;
    cout << "q - Quit" << endl;
    cout << "\nChoose an option:" << endl;
}

char GetChoice() {
    char choice;
    cin >> choice;
    cin.ignore(10000, '\n'); // clear input buffer
    return tolower(choice); // convert to lowercase
}

int GetNumOfNonWSCharacters(const string& text) {
    int count = 0;
    for (char c : text) {
        if (!isspace(c)) count++;
    }
    return count;
}

int GetNumOfWords(const string& text) {
    int count = 0;
    bool inWord = false;
    for (char c : text) {
        if (!isspace(c) && !inWord) {
            inWord = true;
            count++;
        } else if (isspace(c)) {
            inWord = false;
        }
    }
    return count;
}

int FindText(const string& search, const string& text) {
    int count = 0;
    string::size_type pos = 0;
    while ((pos = text.find(search, pos)) != string::npos) {
        count++;
        pos += search.length();
    }
    return count;
}

void ReplaceExclamation(string& text) {
    replace(text.begin(), text.end(), '!', '.');
}

void ShortenSpace(string& text) {
    string::iterator newEnd = unique(text.begin(), text.end(),
                                      [](char a, char b) {
                                          return isspace(a) && isspace(b);
                                      });
    text.erase(newEnd, text.end());
}

void ExecuteMenu(char choice, string& text) {
    string search; // Move initialization outside of switch statement
    switch(choice) {
        case 'c':
            cout << "Number of non-whitespace characters: " << GetNumOfNonWSCharacters(text) << endl;
            break;
        case 'w':
            cout << "Number of words: " << GetNumOfWords(text) << endl;
            break;
        case 'f':
            cin.ignore();
            cout << "Enter a word or phrase to be found:" << endl;
            getline(cin, search);
            cout << "\"" << search << "\" instances: " << FindText(search, text) << endl;
            break;
        case 'r':
            ReplaceExclamation(text);
            cout << "Edited text: " << text << endl;
            break;
        case 's':
            ShortenSpace(text);
            cout << "Edited text: " << text << endl;
            break;
        case 'q':
            break;
        default:
            cout << "Invalid choice. Please choose a valid option." << endl;
    }
}
